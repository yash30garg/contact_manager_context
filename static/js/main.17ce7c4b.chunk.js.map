{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactDetails","onShowClick","onDeleteContact","a","delete","name","email","phone","onClick","style","cursor","bind","float","color","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","handleChange","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updatedContact","match","params","put","About","NotFound","Test","test","console","log","nextProps","nextState","prevProps","prevState","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17ce7c4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <a href='/' className='navbar-brand'>\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item d-flex'>\r\n              <Link to='/' className='nav-link'>\r\n               <i className=\"fas fa-home\"></i>  Home\r\n              </Link>\r\n              <Link to='/about' className='nav-link'>\r\n              <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n              <Link to='/contact/add' className='nav-link'>\r\n              <i className=\"fas fa-plus\"></i> Add Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactDetails: false\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactDetails: !this.state.showContactDetails\r\n    });\r\n  };\r\n\r\n  onDeleteContact = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { id, name, email, phone } = contact;\r\n    const { showContactDetails } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  onClick={this.onDeleteContact.bind(this, id, dispatch)}\r\n                  className='fas fa-times'\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt mr-3'\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactDetails ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>{email}</li>\r\n                  <li className='list-group-item'>{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                {\" \"}\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    //check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const res = await axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to a different screen\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name...'\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter phone...'\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='Submit'\r\n                    className='btn btn-light btn-block'\r\n                    value='Add Contact'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updatedContact = {\r\n      name,\r\n      phone,\r\n      email\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to a different screen\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name...'\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter phone...'\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='Submit'\r\n                    className='btn btn-light btn-block'\r\n                    value='Update Contact'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\n const About = ()  => {\r\n    return (\r\n        <div>\r\n            <h1 className = \"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App to Manage Contact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About ;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'><span className='text-danger'>404</span>, Page Not Found</h1>\r\n      <p className='lead'>Sorry, this page does not exist </p>\r\n      <i className='fas fa-frown display-4' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    test: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Component did mount ...\");\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Component will mount ...\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Component did update ...\"); //when component updates and rerender this is gonna run, for example in case of any state change\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"Component will update ...\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log(\"Component will receive props ...\");\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return null;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    console.log(\"get Snapshot Before Update ...\"); //Before mutation\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header branding='Contact List' />\n          <div className='container'>\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n\n              <Route exact path='/test' component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}